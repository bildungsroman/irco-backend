AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  api7956DE11:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: formApi
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /submit:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${function58FAFE22.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      Cors: '''*'''
    Metadata:
      StackeryName: formApi
  function58FAFE22:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function58FAFE22
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: handleForm
      CodeUri: src/handleForm
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt topicF7549509.TopicName
      Environment:
        Variables:
          TOPIC_NAME: !GetAtt topicF7549509.TopicName
          TOPIC_ARN: !Ref topicF7549509
      Events:
        api7956DE11POSTsubmit:
          Type: Api
          Properties:
            Path: /submit
            Method: POST
            RestApiId: !Ref api7956DE11
    Metadata:
      StackeryName: handleForm
  topicF7549509:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-topicF7549509
    Metadata:
      StackeryName: ircoWelcomeText
  functionB672F631:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-functionB672F631
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: sendScheduledMessage
      CodeUri: src/sendScheduledMessage
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt topic6C1776A5.TopicName
      Environment:
        Variables:
          TOPIC_NAME: !GetAtt topic6C1776A5.TopicName
          TOPIC_ARN: !Ref topic6C1776A5
      Events:
        tableEDD96500:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt tableEDD96500.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
    Metadata:
      StackeryName: sendScheduledMessage
  topic6C1776A5:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-topic6C1776A5
    Metadata:
      StackeryName: ircoNotifier
  tableEDD96500:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: phone
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: phone
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-tableEDD96500
    Metadata:
      StackeryName: phoneData
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)